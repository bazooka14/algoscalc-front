name: "CI CD actions"
on:
  push:
    tags:
      - 'v*'
    branches:
      - test
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - test
      - main
    types: [opened, synchronize, reopened]
    paths-ignore:
      - '**.md'

permissions:
  pull-requests: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository }}:${{ github.ref_name }} 
  TEST_CONTAINER_NAME: algoscalc-front-test
  PROD_CONTAINER_NAME: algoscalc-front-prod

jobs:
  sonarcloud:
    name: SonarCloud code analyze
    runs-on: ubuntu-latest
    if: github.ref_type == 'branch'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build:
    name: Docker image build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/test' || startsWith(github.ref, 'refs/tags/v'))
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get build variables
        id: get_variables
        run: |
          [ ${{ github.ref }} == refs/heads/test ] && \
            echo "VERSION=Test-$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT" || 
            echo "VERSION=${{ github.ref_name }}" >> "$GITHUB_OUTPUT";          
          [ ${{ github.ref }} == refs/heads/test ] && \
            echo "ENVIRONMENT=staging" >> "$GITHUB_OUTPUT" || 
            echo "ENVIRONMENT=production" >> "$GITHUB_OUTPUT";
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_REACT_APP_ENVIRONMENT: ${{ steps.get_variables.outputs.ENVIRONMENT }}
          envkey_REACT_APP_VERSION: ${{ steps.get_variables.outputs.VERSION }}
          file_name: .env
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}
  deploy:
    name: App deploy
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.result == 'success'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get container name
        id: get_container_name
        run: |
          [ ${{ github.ref }} == refs/heads/test ] && \
            echo "CONTAINER_NAME=${{ env.TEST_CONTAINER_NAME }}" >> "$GITHUB_OUTPUT" || 
            echo "CONTAINER_NAME=${{ env.PROD_CONTAINER_NAME }}" >> "$GITHUB_OUTPUT";     
      - name: deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SANDBOX_HOST }}
          username: ${{ secrets.SANDBOX_USER }}
          key: ${{ secrets.SANDBOX_KEY }}
          port: ${{ secrets.SANDBOX_PORT }}
          script: |
            docker logout;
            docker pull ${{ env.IMAGE_NAME }};
            docker rm -f ${{ steps.get_container_name.outputs.CONTAINER_NAME }} || true;
            docker run -d \
              --restart=always \
              --name ${{ steps.get_container_name.outputs.CONTAINER_NAME }} \
              --network ${{ secrets.SANDBOX_NETWORK }} \
             ${{ env.IMAGE_NAME }};